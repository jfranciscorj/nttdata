openapi: 3.0.3
info:
  title: User API
  version: 1.0.0
  description: API for managing users with JWT authentication
servers:
  - url: http://localhost:9001
    description: Local server
tags:
  - name: Users
    description: Operations related to user management
  - name: Auth
    description: Authentication and login

paths:
  /v1/auth/login:
    post:
      tags:
        - Auth
      summary: Authenticate user and return JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: juan@example.com
                password:
                  type: string
                  example: "MySecret123*"
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: "UUID de usuario"
                    example: "d5e6f865-995c-402a-88c0-c703a677f14f"
                  correo:
                    type: string
                    description: "Correo electronico."
                    example: "ju.ramirezj@gmail.com"                    
                  token:
                    type: string
                    description: "Token de acceso "
                    example: "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdS5yYW1pcmV6akBnbWFpbC5jb20iLCJpYXQiOjE3NTczMjc3ODAsImV4cCI6MTc1NzMyODY4MH0.d9laHt53iMlpMMWrzhytXdal53gUMggif_ohrVGEJxI"
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '204':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/noContent'                
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badrequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'                
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal'
  /v1/users:
    post:
      tags:
        - Users
      summary: Create new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserResponse"               
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badrequest'               
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal'
    get:
      tags:
        - Users
      summary: Get all users
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetUserResponse"             
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badrequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'                
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal'

  /v1/users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserResponse"
        '204':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/noContent'                
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badrequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'                
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal'

    put:
      tags:
        - Users
      summary: Update user (full replace)
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
      responses:
        "200":
          description: User updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserResponse"
        '204':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/noContent'                
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badrequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'                
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal'

    patch:
      tags:
        - Users
      summary: Partial update user
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: User updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserResponse"
        '204':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/noContent'                
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badrequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'                
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal'

    delete:
      tags:
        - Users
      summary: Delete user by ID
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: User deleted               
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badrequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'                
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal'

  /v1/users/{id}/enable:
    patch:
      tags:
        - Users
      summary: Enable user
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: User enabled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserResponse"
        '204':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/noContent'                
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badrequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'                
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal'

  /v1/users/{id}/disable:
    patch:
      tags:
        - Users
      summary: Disable user
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: User disabled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserResponse"
        '204':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/noContent'                
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badrequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'                
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal'

  /v1/users/{id}/status:
    get:
      tags:
        - Users
      summary: Get user active status
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: User status
          content:
            application/json:
              schema:
                type: object
                properties:
                  activo:
                    type: boolean
                    example: true
        '204':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/noContent'                
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badrequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'                
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal'

components:
  securitySchemes:
    bearerAuth: 
      type: http
      scheme: bearer
      bearerFormat: JWT

  security:
    - bearerAuth: [] 

  schemas:
    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
          example: Juan Francisco
        email:
          type: string
          example: juan@example.com
        password:
          type: string
          example: "MySecret123*"
        phones:
          type: array
          items:
            $ref: "#/components/schemas/PhoneRequest"

    PhoneRequest:
      type: object
      properties:
        number:
          type: integer
          example: 987654321
        cityCode:
          type: integer
          example: 9
        countryCode:
          type: integer
          example: 56

    CreateUserResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        creado:
          type: string
          format: date-time
        modificado:
          type: string
          format: date-time
        ultimoLogin:
          type: string
          format: date-time
        token:
          type: string
        activo:
          type: boolean

    GetUserResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
        phones:
          type: array
          items:
            $ref: "#/components/schemas/PhoneResponse"
        creado:
          type: string
          format: date-time
        modificado:
          type: string
          format: date-time
        ultimoLogin:
          type: string
          format: date-time
        activo:
          type: boolean

    PhoneResponse:
      type: object
      properties:
        number:
          type: integer
        cityCode:
          type: integer
        countryCode:
          type: integer

    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phones:
          type: array
          items:
            $ref: "#/components/schemas/PhoneRequest"

    internal:
      type: object
      properties:
        statusCode:
          type: integer
          description: "Código de respuesta HTTP."
          example: 500
        message:
          type: string
          description: "Mensaje de descripción"
          example: "Internal Server Error"
        info:
          type: string
          description: "Mensaje de descripción de transacción"
          example: "Error"
        level:
          type: string
          description: "Tipo de error"
          example: "Tecnico"   
    notfound:
      type: object
      properties:
        statusCode:
          type: integer
          description: "Código de respuesta HTTP."
          example: 404
        message:
          type: string
          description: "Mensaje de descripción"
          example: "Recurso no encontrado"
        info:
          type: string
          description: "Mensaje de descripción de transacción"
          example: "Error"
        level:
          type: string
          description: "Tipo de error"
          example: "Funcional" 
    badrequest:
      type: object
      properties:
        statusCode:
          type: integer
          description: "Código de respuesta HTTP."
          example: 400
        message:
          type: string
          description: "Mensaje de descripción"
          example: "El campo nombre no puede estar vacio"
        info:
          type: string
          description: "Mensaje de descripción de transacción"
          example: "Error"
        level:
          type: string
          description: "Tipo de error"
          example: "Funcional"
    unauthorized:
      type: object
      properties:
        statusCode:
          type: integer
          description: "Código de respuesta HTTP."
          example: 401
        message:
          type: string
          description: "Mensaje de descripción"
          example: "No autorizado"
        info:
          type: string
          description: "Mensaje de descripción de transacción"
          example: "Error"
        level:
          type: string
          description: "Tipo de error"
          example: "Funcional"  
    forbidden:
      type: object
      properties:
        statusCode:
          type: integer
          description: "Código de respuesta HTTP."
          example: 403
        message:
          type: string
          description: "Mensaje de descripción"
          example: "Sin permisos para acceder al recurso"
        info:
          type: string
          description: "Mensaje de descripción de transacción"
          example: "Error"
        level:
          type: string
          description: "Tipo de error"
          example: "Funcional"  
    noContent:
      type: object
      properties:
        statusCode:
          type: integer
          description: "Código de respuesta HTTP."
          example: 204
        message:
          type: string
          description: "Mensaje de descripción"
          example: "No encontrado"
        info:
          type: string
          description: "Mensaje de descripción de transacción"
          example: "Error"
        level:
          type: string
          description: "Tipo de error"
          example: "Funcional"           
    ok:
        type: object
        properties:
          id:
            type: string
            description: "Id de usuario."
            example: "d5e6f865-995c-402a-88c0-c703a677f14f"
          creado:
            type: string
            description: "Fecha de creación"
            example: "2025-09-08T07:36:20.5141412"
          modificado:
            type: string
            description: "Fecha de ultima modificacion"
            example: "2025-09-08T07:36:20.5141412"
          ultimoLogin:
            type: string
            description: "Fecha de ultimo unicio de sesion"
            example: "2025-09-08T07:36:20.5141412" 
          token:
              type: string
              description: "Token de acceso "
              example: "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdS5yYW1pcmV6akBnbWFpbC5jb20iLCJpYXQiOjE3NTczMjc3ODAsImV4cCI6MTc1NzMyODY4MH0.d9laHt53iMlpMMWrzhytXdal53gUMggif_ohrVGEJxI"
          activo:
            type: boolean
            description: "Indica si el usuario esta activo."
            example: true  